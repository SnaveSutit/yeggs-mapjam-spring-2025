import ./math.mcbt

function on_load minecraft:load {
	scoreboard objectives add motion.x dummy
	scoreboard objectives add motion.z dummy
	scoreboard objectives add motion.yaw dummy

	scoreboard objectives add forklift_lift_state dummy

	scoreboard objectives add motion.fb dummy
	scoreboard objectives add motion.lr dummy

	scoreboard players set 80 i 80
	scoreboard players set 85 i 85
	scoreboard players set 90 i 90
	scoreboard players set 100 i 100
}

function debug {
	function animated_java:forklift/remove/entities
	execute rotated 0 0 run function forklift:summon
}

function summon {
	function animated_java:forklift/summon {args:{animation:"fork_height_0"}}
}


function on_tick minecraft:tick {
	# Re-create the forklift if a player who was previously riding it logs off
	execute if score #current_tick i matches 10.. run {
		execute unless entity @e[type=minecraft:item_display,tag=forklift] as @e[type=minecraft:item_display,tag=forklift_seat] at @s positioned ~ 1 ~ run {
			execute on passengers run tag @s add player_on_forklift_seat_who_logged_off
			function animated_java:forklift/remove/entities
			function animated_java:forklift/summon {args:{animation:"fork_height_0"}}
			ride @n[tag=player_on_forklift_seat_who_logged_off] mount @n[type=minecraft:item_display,tag=forklift_seat]
			tag @a remove player_on_forklift_seat_who_logged_off
		}
		# Re-create the forklift if the seat disappears
		execute unless entity @e[type=minecraft:item_display,tag=forklift_seat] as @e[type=minecraft:item_display,tag=forklift] at @s run {
			function animated_java:forklift/remove/entities
			function animated_java:forklift/summon {args:{animation:"fork_height_0"}}
		}
	}

	execute as @n[type=item_display,tag=forklift] at @s run {
		scoreboard players set #forward_backward i 0
		scoreboard players set #left_right i 0

		function animated_java:forklift/as_locator {name:'seat', command:'function forklift:get_player_inputs'}

		execute if score #forward_backward i matches 1 run scoreboard players add @s motion.fb 10
		execute if score #forward_backward i matches -1 run scoreboard players remove @s motion.fb 10

		execute \
			if score #forward_backward i matches 1 \
			unless score @s motion.fb matches -16..16 \
			if score #left_right i matches 1 \
		run scoreboard players add @s motion.lr 10
		execute \
			if score #forward_backward i matches 1 \
			unless score @s motion.fb matches -16..16 \
			if score #left_right i matches -1 \
		run scoreboard players remove @s motion.lr 10

		execute \
			if score #forward_backward i matches -1 \
			unless score @s motion.fb matches -16..16 \
			if score #left_right i matches 1 \
		run scoreboard players remove @s motion.lr 10
		execute \
			if score #forward_backward i matches -1 \
			unless score @s motion.fb matches -16..16 \
			if score #left_right i matches -1 \
		run scoreboard players add @s motion.lr 10

		scoreboard players operation #loop i = @s motion.lr
		execute if score #loop i matches 1.. at @s run {
			scoreboard players remove #loop i 1
			execute if score #loop i matches 1.. rotated ~0.15 ~ run return run function ^0
			rotate @s ~ ~
		}
		execute if score #loop i matches ..-1 at @s run {
			scoreboard players add #loop i 1
			execute if score #loop i matches ..-1 rotated ~-0.15 ~ run return run function ^0
			rotate @s ~ ~
		}

		scoreboard players operation @s motion.lr *= 80 i
		scoreboard players operation @s motion.lr /= 100 i

		execute if score @s motion.lr matches -6..-1 run scoreboard players set @s motion.lr 0

		scoreboard players operation #loop i = @s motion.fb
		execute if score #loop i matches 1.. at @s run {
			scoreboard players remove #loop i 1
			execute unless block ^ ^ ^0.5 #forklift:drive_through run {
				scoreboard players set #loop i 0
				scoreboard players set @s motion.fb 0
			}
			execute if score #loop i matches 1.. positioned ^ ^ ^0.01 run return run function ^0
			tp @s ~ ~ ~ ~ ~
		}
		execute if score #loop i matches ..-1 at @s run {
			scoreboard players add #loop i 1
			execute if score #loop i matches ..-1 positioned ^ ^ ^-0.01 run return run function ^0
			tp @s ~ ~ ~ ~ ~
		}

		scoreboard players operation @s motion.fb *= 85 i
		scoreboard players operation @s motion.fb /= 100 i

		execute if score @s motion.fb matches -6..-1 run scoreboard players set @s motion.fb 0

		# Fork tech
		execute unless score @s forklift_lift_state matches 0 at @s if block ~ ~-4 ~ red_wool run {
			function animated_java:forklift/animations/fork_height_0/play
			scoreboard players set @s forklift_lift_state 0
		}
		execute unless score @s forklift_lift_state matches 1 at @s if block ~ ~-4 ~ orange_wool run {
			function animated_java:forklift/animations/fork_height_1/play
			scoreboard players set @s forklift_lift_state 1
		}
		execute unless score @s forklift_lift_state matches 2 at @s if block ~ ~-4 ~ yellow_wool run {
			function animated_java:forklift/animations/fork_height_2/play
			scoreboard players set @s forklift_lift_state 2
		}
		execute unless score @s forklift_lift_state matches 3 at @s if block ~ ~-4 ~ lime_wool run {
			function animated_java:forklift/animations/fork_height_3/play
			scoreboard players set @s forklift_lift_state 3
		}
	}
}

tag blocks drive_through {
	minecraft:air
	minecraft:cave_air
	minecraft:void_air
}

function activate_forks {
	# Needs to be executed as the root entity
	function animated_java:forklift/as_own_locator_entities {command:'function forklift:activate_forks/as_locators'}
}

dir activate_forks {
	function as_locators {
		execute unless entity @s[tag=cake_mount] run return fail
		scoreboard players set #has_item i 0
		execute on passengers run scoreboard players set #has_item i 1
		execute if score #has_item i matches 1 at @s run {
			execute on passengers run ride @s dismount
		}
		execute if score #has_item i matches 0 at @s run {
			execute as @n[tag=liftable_item,distance=..6] run {
				tp @s ~ ~ ~ ~ ~
				ride @s mount @n[tag=cake_mount,distance=..2]
				execute on passengers on passengers if entity @s[tag=aj.global.root] run {
					rotate @s ~ ~
				}
			}
		}
	}
}

function get_player_inputs {
	execute unless entity @s[tag=forklift_seat] run return fail
	execute on passengers run {
		execute if predicate input:key_backward run scoreboard players set #forward_backward i -1
		execute if predicate input:key_forward run scoreboard players set #forward_backward i 1
		execute if predicate input:key_left run scoreboard players set #left_right i -1
		execute if predicate input:key_right run scoreboard players set #left_right i 1
	}
}

function on_interaction {
	execute unless entity @s[tag=forklift_seat_interaction] run return fail

	scoreboard players set #check i 0
	execute as @n[tag=forklift_seat,distance=..10] on passengers run scoreboard players set #check i 1

	execute as @a[tag=interaction] run {
		execute if score #check i matches 1 run {
			execute on vehicle if entity @s[tag=forklift_seat] run scoreboard players set #check i 2
			execute if score #check i matches 2 run {
				execute as @n[tag=forklift,distance=..10] at @s run function forklift:activate_forks
			}
			execute if score #check i matches 1 run {
				say Someone else is in the seat
			}
		}
		execute if score #check i matches 0 run {
			ride @s mount @n[tag=forklift_seat,distance=..10]
		}
	}
}