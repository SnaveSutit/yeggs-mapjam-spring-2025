function on_load minecraft:load {
	scoreboard objectives add ingredient_link_id dummy
}

function summon {
	#ARGS: {type: string}
	execute store result score #random i run random value 0..15
	REPEAT(0, 15) as i {
		$execute if score #random i matches <%i%> align xyz positioned ~.5 ~ ~.5 rotated <%i*(360/16)%> 0 run function animated_java:ingredient_$(type)/summon {args:{animation:"spawn",start_animation:true}}
	}
	$execute align xyz positioned ~.5 ~ ~.5 summon minecraft:armor_stand run { {type:$(type)}
		$tag @s add ingredient_$(type)
		tag @s add ingredient
		data merge entity @s {Silent:true,Invisible:true,Invulnerable:true}

		tag @s add mount
		execute summon minecraft:interaction run {
			tag @s add ingredient_offset
			data merge entity @s {width:0,height:-1.95}
			ride @s mount @n[tag=mount,distance=..4]

			tag @s add mount2
			execute as @n[type=minecraft:item_display,tag=aj.global.root,distance=..4] run {
				execute on passengers unless entity @s[tag=aj.global.data] run data modify entity @s view_range set value 2
				ride @s mount @n[tag=mount2,distance=..4]
			}
			tag @s remove mount2
		}
		execute summon minecraft:interaction run {
			tag @s add ingredient_offset2
			data merge entity @s {width:0,height:-2}
			ride @s mount @n[tag=mount,distance=..4]

			tag @s add mount2
			execute summon minecraft:interaction run {
				tag @s add ingredient_interaction
				data merge entity @s {width:3,height:3,response:true}
				ride @s mount @n[tag=mount2,distance=..4]
			}
			tag @s remove mount2
		}
		tag @s remove mount
	}
}

function create_dispenser {
	#ARGS: {type: string}
	$execute align xyz positioned ~.5 ~ ~.5 summon minecraft:marker run { {type:$(type)}
		tag @s add ingredient_dispenser
		$data merge entity @s {data:{type:$(type)}}
	}
}

function on_tick minecraft:tick {

	execute as @e[type=minecraft:marker,tag=ingredient_dispenser] at @s run {
		execute unless entity @e[type=minecraft:armor_stand,tag=ingredient,distance=..2] run {
			scoreboard players remove @s spawn_timer 1
			execute if score @s spawn_timer matches ..0 run {
				function ingredient:summon with entity @s data
				scoreboard players set @s spawn_timer 300
			}
		}
	}

	execute as @a at @s run {
		execute if score @s ingredient_link_id matches 0.. run {
			scoreboard players operation #this ingredient_link_id = @s ingredient_link_id
			execute store success score #sneaking i if predicate input:key_sneak
			execute as @n[type=minecraft:armor_stand,tag=ingredient] if score @s ingredient_link_id = #this ingredient_link_id rotated ~ 0 run {
				execute rotated ~ 0 run tp @s ^ ^2 ^1 ~ ~
				execute if score #sneaking i matches 1 run {
					scoreboard players reset @s ingredient_link_id
				}
			}
			execute if score #sneaking i matches 1 run {
				scoreboard players reset @s ingredient_link_id
			}
		}
	}

	execute as @e[type=minecraft:armor_stand,tag=ingredient_milk] at @s run {
		# Attempt to attach to nearby lock points
		scoreboard players set #check i 0
		execute on vehicle run scoreboard players set #check i 1
		execute if score #check i matches 0 if entity @n[type=minecraft:item_display,tag=milk_lock_point,distance=..1.5] run {
			scoreboard players set #has_passenger i 0
			execute as @n[type=minecraft:item_display,tag=milk_lock_point,distance=..4] on passengers run scoreboard players set #has_passenger i 1
			execute if score #has_passenger i matches 1 run return fail

			execute on passengers on passengers if entity @s[tag=aj.global.root] run function util:snap_rotation
			ride @s mount @n[type=minecraft:item_display,tag=milk_lock_point,distance=..4]
		}
	}
}

function on_interaction {
	execute on vehicle on vehicle at @s run {
		execute if score @s ingredient_link_id matches 0.. run {
			# Throw the ingredient
			scoreboard players operation #this ingredient_link_id = @s ingredient_link_id
			tag @s add to_throw
			execute as @a if score @s ingredient_link_id = #this ingredient_link_id at @s run {
				scoreboard players reset @s ingredient_link_id
				function ingredient:throw
			}
			tag @s remove to_throw
			scoreboard players reset @s ingredient_link_id
		} else run {
			execute store result score @s ingredient_link_id run scoreboard players add #last_ingredient_link_id i 1
			execute as @n[tag=interaction,distance=..10] run {
				scoreboard players operation @s ingredient_link_id = #last_ingredient_link_id i
			}
		}
	}
}

function throw {
	# The ingredient must be tagged with "to_throw", and this function should be called from the player.
	# Look Vector
	execute positioned 0.0 0.0 0.0 run {
		execute anchored feet positioned ^ ^ ^1 run summon minecraft:marker ~ ~ ~ {Tags:['vector']}
		execute as @e[type=minecraft:marker,tag=vector,limit=1,distance=..3] at @s run {
			execute store result score #x i run data get entity @s Pos[0] 1000
			execute store result score #y i run data get entity @s Pos[1] 1000
			execute store result score #z i run data get entity @s Pos[2] 1000
			kill @s
		}
	}
	# Motion Vector
	execute store result score #x_motion i run data get entity @s Motion[0] 1500
	execute store result score #y_motion i run data get entity @s Motion[1] 1500
	execute store result score #z_motion i run data get entity @s Motion[2] 1500

	scoreboard players operation #x i += #x_motion i
	scoreboard players operation #y i += #y_motion i
	scoreboard players operation #z i += #z_motion i

	execute as @n[tag=to_throw,distance=..4] at @s run {
		execute store result entity @s Motion[0] double 0.001 run scoreboard players get #x i
		execute store result entity @s Motion[1] double 0.001 run scoreboard players get #y i
		execute store result entity @s Motion[2] double 0.001 run scoreboard players get #z i
	}
}