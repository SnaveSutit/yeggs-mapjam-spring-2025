function on_load minecraft:load {
}


function summon {
	# 0 = empty
	# 1 = animating
	scoreboard players set #launcher_state i 0
	data remove storage map:launcher data
	function animated_java:launcher/summon {args:{}}
}


function on_tick minecraft:tick {
	execute as @e[type=minecraft:item_display,tag=launcher] at @s run {
		execute if score #launcher_state i matches 0 run {
			scoreboard players set #is_correct_layer i -1
			execute as @n[type=minecraft:item_display,tag=aj.launcher.locator.layer0_lock_point,distance=..8] at @s run {
				scoreboard players set #has_pan i 0
				execute on passengers if entity @s[tag=pan] run {
					scoreboard players set #has_pan i 1
					execute on passengers on passengers if entity @s[tag=aj.pan.root] run {
						data remove storage temp:temp data
						data modify storage temp:temp data set from entity @s data
					}
				}
				execute unless score #has_pan i matches 1 run return 0

				execute store result score #is_correct_layer i run function sequence:compare_next with storage temp:temp data

				execute if score #is_correct_layer i matches 1 run {
					execute on passengers run function pan:extract_to_layer
					ride @n[tag=layer,distance=..8] mount @s
					tag @s remove pan_lock_point
				}
				execute if score #is_correct_layer i matches 0 run {
					execute on passengers run function util:kill_stacked_entities
				}
			}
			execute if score #is_correct_layer i matches 1 run {
				function animated_java:launcher/animations/launch/play
				scoreboard players set #launcher_state i 1
				function sequence:remove_next
			}
			execute if score #is_correct_layer i matches 0 run {
				playsound minecraft:entity.generic.explode block @a ~ ~ ~ 2 1
				playsound minecraft:entity.villager.no block @a ~ ~ ~ 2 0.1
				particle minecraft:explosion_emitter ~ ~ ~
				tellraw @a [ \
					"<", {text:"His Immenseness William Cornelius Grumblethorn III",color:green}, "> ", \
					{"text":"That's not the correct recipe! The next cake layer should be a ","color":"red"}, \
					{"nbt": "queue[0].batter","storage":"map:sequence","color":"yellow"}, {"text":" cake with ","color":"red"}, \
					{"nbt": "queue[0].frosting","storage":"map:sequence","color":"yellow"}, {"text": " frosting!","color":"red"} \
				]
			}
		}
	}
}
